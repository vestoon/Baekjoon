import sys
input = sys.stdin.readline

N = int(input())
S = list(map(int, input().split()))

"""
우선 S는 내림차순으로 정렬한다. 

일단 임의의 i에 대해서 
sum(A[:i])+1 < A[i] 라면 
sum(A[:i])+1은 만들 수 없다  <- 이 정리가 중요하다

=> sum(A[:i])+1 즉, A[i-1]까지의 합+1 을 x라고 한다면 x를 만들 수 없는 이유는
우선 정렬했기 때문에 A[i]부터는 전부 x보다 크고
그렇다고 A[i] 이전의 값은 다 합쳐도 x보다 1 모자라기 때문이다. 
(이전 값을 0이라고 한다면 i=0에서도 성립할 듯)

즉 임의의 i에 대해서 조건을 만족하면 아무리 커도 sum(A[:i]) 는 만들지 못한다는 것을 보장해준다는 것인데
여기서 문제는 sum(A[:i]) 보다 작은 수에서도 만들지 못하는 수가 있지 않을까? 하는 것이다.
확인을 위해 i+1 까지 확장해 보자

sum(A[:i]) = x, A[i] = x+1 로 i 까지는 조건을 만족한다고 하자
i+1 에 대해서 생각해보자
sum(A[:i+1]) = 2x + 1 이다.
우선 i 번째 이전의 경우, 즉 1부터 x 까지 그리고 A[i]인 x+1 까지는 지접 계산하면 만들 수 있는 수라는걸 알 수 있다.
A : 1, 1 또는 A : 1, 2 이런 식으로 말이다. 

그렇다면 A[i] 부터 A[i+1] 사이의 수는 어떨까? 정리에 따르면
A[i+1] == 2x+2 가 아니라면 2x+2가 정답인 거라고 하지만
A[i] 인 x+1 과 A[i+1]인 2x+2 사이에는 만들 수 없는 수가 있을 수도 있지 않을까?

x+1 < k < 2x+2 인 만들 수 없는 수 k 가 있다고 생각해 보자
우선 A[i] = x=1 이니 이를 사용하면 
0 < k-A[i] < x+1 이 된다. 하지만 가정에 의해서 1~x까지는 자유롭게 만들 수 있다고 했으니
k는 결국 만들 수 있는 수인 것이다. 

결론)
sum(A[:i])+1 < A[i] 라면 
sum(A[:i])+1은 만들 수 없다  <- 제일 앞에서 말한 이 정리대로 구하면 답이 나온다. 
"""

S.sort()
acc = 0 # 이전 값들의 합

for s in S:
    if acc+1 < s:
        print(acc+1)
        break
    acc += s
else:
    print(acc+1)
