N, M = map(int, input().split()) # N: 세로, M: 가로

"""
이동 횟수 cnt를 계산하고 +1을 출력하자
무슨 짓을 하든 오른쪽으로는 최소 한 칸을 움직이기 때문에 장소가 겹칠 수는 없다. 
남은 공간을 잘 생각하면서 그리디를 해보자

4번 이상 이동한다면 모든 방식을 다 한 번씩은 사용해야 한다. 

모든 방법을 다 한 번씩 사용하려면 최소한 가로7, 세로 3칸이 필요하다.

분기 1 자유롭게 움직였을 때 이동 횟수가 4 이상인가?
4 미만인 경우 -> 그냥 출력하면 해결

4이상인 경우가 주요 문제
분기 2 모든 이동 연산을 전부 1번씩 사용할 환경이 되는가?
가능한 경우 -> 4번 이동했다고 가정한 후 4 + 가로를 6 빼고 자유 이동 횄수
불가능한 경우 -> 그냥 3번(어차피 4 이상은 불가능하고 자유 이동으로도 4 이상이 가능하기 때문)
"""

def free_move(x:int, y:int): # x: 가로, y: 세로 내에서 움직일 수 있는 횟수
    if y == 1:
        return 0 # 이동 횟수를 리턴하기 때문에 0 이다. 

    if y == 2:
        return (x-1)//2
    # y >= 3
    return x-1


fm = free_move(M, N)
cnt = 0
if fm < 4:
    cnt = fm
else:
    if N < 3 or M < 7:
        cnt = 3
    else:
        cnt = free_move(M-6, N)+4

print(cnt+1)
